{"version":3,"names":["languageSwitcherCss","VuiLanguageSwitcherStyle0","LanguageSwitcher","this","parsedLanguages","handleChange","event","select","target","localeChange","emit","value","handleButtonClick","code","name","componentWillLoad","languages","JSON","parse","render","variant","h","class","onChange","map","lang","key","selected","currentLocale","onClick"],"sources":["src/components/i18n/language-switcher.css?tag=vui-language-switcher&encapsulation=shadow","src/components/i18n/language-switcher.tsx"],"sourcesContent":[":host {\n  display: block;\n}\n\n.language-select {\n  padding: 8px;\n  border-radius: 4px;\n  border: 1px solid var(--vui-border-color, #ccc);\n}\n\n.language-buttons {\n  display: flex;\n  gap: 8px;\n}\n\n.language-buttons vui-button {\n  min-width: 100px;\n}\n","import { Component, Event, EventEmitter, Prop, h } from '@stencil/core'\n\nexport interface Language {\n  code: string\n  name: string\n}\n\n@Component({\n  tag: 'vui-language-switcher',\n  styleUrl: 'language-switcher.css',\n  shadow: true,\n})\nexport class LanguageSwitcher {\n  @Prop() languages: Language[] | string = [\n    { code: 'en', name: 'English' },\n    { code: 'fr', name: 'Français' },\n    { code: 'es', name: 'Español' },\n  ]\n\n  @Prop() currentLocale?: string\n  @Prop() variant: 'select' | 'buttons' = 'select'\n\n  @Event() localeChange: EventEmitter<string>\n\n  private parsedLanguages: Language[] = []\n\n  componentWillLoad() {\n    this.parsedLanguages = typeof this.languages === 'string' ? JSON.parse(this.languages) : this.languages\n  }\n\n  private handleChange = (event: Event) => {\n    const select = event.target as HTMLSelectElement\n    this.localeChange.emit(select.value)\n  }\n\n  private handleButtonClick = (code: string) => {\n    this.localeChange.emit(code)\n  }\n\n  render() {\n    if (this.variant === 'select') {\n      return (\n        <select class=\"language-select\" onChange={this.handleChange}>\n          {this.parsedLanguages.map(lang => (\n            <option key={lang.code} value={lang.code} selected={this.currentLocale === lang.code}>\n              {lang.name}\n            </option>\n          ))}\n        </select>\n      )\n    }\n\n    return (\n      <div class=\"language-buttons\">\n        {this.parsedLanguages.map(lang => (\n          <vui-button\n            key={lang.code}\n            variant={this.currentLocale === lang.code ? 'default' : 'ghost'}\n            onClick={() => this.handleButtonClick(lang.code)}\n          >\n            {lang.name}\n          </vui-button>\n        ))}\n      </div>\n    )\n  }\n}\n"],"mappings":"kDAAA,MAAMA,EAAsB,yMAC5B,MAAAC,EAAeD,E,MCWFE,EAAgB,M,oEAYnBC,KAAAC,gBAA8B,GAM9BD,KAAAE,aAAgBC,IACtB,MAAMC,EAASD,EAAME,OACrBL,KAAKM,aAAaC,KAAKH,EAAOI,MAAM,EAG9BR,KAAAS,kBAAqBC,IAC3BV,KAAKM,aAAaC,KAAKG,EAAK,E,eAvBW,CACvC,CAAEA,KAAM,KAAMC,KAAM,WACpB,CAAED,KAAM,KAAMC,KAAM,YACpB,CAAED,KAAM,KAAMC,KAAM,Y,0CAIkB,Q,CAMxC,iBAAAC,GACEZ,KAAKC,uBAAyBD,KAAKa,YAAc,SAAWC,KAAKC,MAAMf,KAAKa,WAAab,KAAKa,S,CAYhG,MAAAG,GACE,GAAIhB,KAAKiB,UAAY,SAAU,CAC7B,OACEC,EAAA,UAAQC,MAAM,kBAAkBC,SAAUpB,KAAKE,cAC5CF,KAAKC,gBAAgBoB,KAAIC,GACxBJ,EAAA,UAAQK,IAAKD,EAAKZ,KAAMF,MAAOc,EAAKZ,KAAMc,SAAUxB,KAAKyB,gBAAkBH,EAAKZ,MAC7EY,EAAKX,Q,CAOhB,OACEO,EAAA,OAAKC,MAAM,oBACRnB,KAAKC,gBAAgBoB,KAAIC,GACxBJ,EAAA,cACEK,IAAKD,EAAKZ,KACVO,QAASjB,KAAKyB,gBAAkBH,EAAKZ,KAAO,UAAY,QACxDgB,QAAS,IAAM1B,KAAKS,kBAAkBa,EAAKZ,OAE1CY,EAAKX,Q","ignoreList":[]}