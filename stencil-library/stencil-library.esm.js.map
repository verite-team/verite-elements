{"version":3,"names":["patchBrowser","importMeta","url","opts","resourcesUrl","URL","href","promiseResolve","then","async","options","globalScripts","bootstrapLazy","languages","currentLocale","variant","type","googleClientId","for","required","heading","description","prompt","action","submitLabel","elevation","brandLabel","brandLogo","firstnameLabel","firstnamePlaceholder","lastnameLabel","lastnamePlaceholder","emailLabel","emailPlaceholder","phoneLabel","phonePlaceholder","passwordLabel","passwordPlaceholder","forgotPasswordLabel","passwordShowLabel","passwordHideLabel","firstName","lastName","email","phone","password","display","styles","passwordValidation","emailValidation","isLoading","passwordVisible","firstNameError","lastNameError","emailError","phoneError","passwordError","isSubmitted","permissions","application","redirectUri","showRedirect","permissionsList","code","activeIndex","theme","position","gap","duration","toasts","expanded","show","update","dismissToast","text","params","translatedText","locale","translations","loadTranslations","translationsPath","fallbackLocale","supportedLocales","currentTranslations","name","size","width","height","radius","label","htmlFor","errorMessage","isOpen","disabled","target","showDivider","showBrand","message","showIcon","direction","items","justify","wrap","grow","spaceUnit","breakpoint","breakpointDirection","placeholder","autocomplete","autocorrect","maxlength","readonly","value","focusable","invalid","align","logo","orientation","weight","color","svgContent","busy","form"],"sources":["../../node_modules/.pnpm/@stencil+core@4.19.2/node_modules/@stencil/core/internal/client/patch-browser.js","@lazy-browser-entrypoint?app-data=conditional"],"sourcesContent":["/*\n Stencil Client Patch Browser v4.19.2 | MIT Licensed | https://stenciljs.com\n */\n\n// src/client/client-patch-browser.ts\nimport { BUILD, NAMESPACE } from \"@stencil/core/internal/app-data\";\nimport { consoleDevInfo, doc, H, promiseResolve } from \"@stencil/core\";\nvar patchBrowser = () => {\n  if (BUILD.isDev && !BUILD.isTesting) {\n    consoleDevInfo(\"Running in development mode.\");\n  }\n  if (BUILD.cloneNodeFix) {\n    patchCloneNodeFix(H.prototype);\n  }\n  const scriptElm = BUILD.scriptDataOpts ? Array.from(doc.querySelectorAll(\"script\")).find(\n    (s) => new RegExp(`/${NAMESPACE}(\\\\.esm)?\\\\.js($|\\\\?|#)`).test(s.src) || s.getAttribute(\"data-stencil-namespace\") === NAMESPACE\n  ) : null;\n  const importMeta = import.meta.url;\n  const opts = BUILD.scriptDataOpts ? (scriptElm || {})[\"data-opts\"] || {} : {};\n  if (importMeta !== \"\") {\n    opts.resourcesUrl = new URL(\".\", importMeta).href;\n  }\n  return promiseResolve(opts);\n};\nvar patchCloneNodeFix = (HTMLElementPrototype) => {\n  const nativeCloneNodeFn = HTMLElementPrototype.cloneNode;\n  HTMLElementPrototype.cloneNode = function(deep) {\n    if (this.nodeName === \"TEMPLATE\") {\n      return nativeCloneNodeFn.call(this, deep);\n    }\n    const clonedNode = nativeCloneNodeFn.call(this, false);\n    const srcChildNodes = this.childNodes;\n    if (deep) {\n      for (let i = 0; i < srcChildNodes.length; i++) {\n        if (srcChildNodes[i].nodeType !== 2) {\n          clonedNode.appendChild(srcChildNodes[i].cloneNode(true));\n        }\n      }\n    }\n    return clonedNode;\n  };\n};\nexport {\n  patchBrowser\n};\n","export { setNonce } from '@stencil/core';\nimport { bootstrapLazy } from '@stencil/core';\nimport { patchBrowser } from '@stencil/core/internal/client/patch-browser';\nimport { globalScripts } from '@stencil/core/internal/app-globals';\npatchBrowser().then(async (options) => {\n  await globalScripts();\n  return bootstrapLazy([/*!__STENCIL_LAZY_DATA__*/], options);\n});\n"],"mappings":"0HAOA,IAAIA,EAAe,KAUjB,MAAMC,cAAyBC,IAC/B,MAAMC,EAAqE,GAC3E,GAAIF,IAAe,GAAI,CACrBE,EAAKC,aAAe,IAAIC,IAAI,IAAKJ,GAAYK,IACjD,CACE,OAAOC,EAAeJ,EAAK,EClB7BH,IAAeQ,MAAKC,MAAOC,UACnBC,IACN,OAAOC,EAAc,2CAAuC,CAAAC,UAAA,IAAAC,cAAA,qBAAAC,QAAA,8CAAAC,KAAA,wKAAAC,eAAA,0DAAAC,IAAA,IAAAC,SAAA,6CAAAC,QAAA,IAAAC,YAAA,IAAAC,OAAA,IAAAC,OAAA,IAAAC,YAAA,mBAAAT,QAAA,IAAAU,UAAA,IAAAC,WAAA,kBAAAC,UAAA,2CAAAP,QAAA,IAAAC,YAAA,IAAAC,OAAA,IAAAC,OAAA,IAAAC,YAAA,mBAAAT,QAAA,IAAAU,UAAA,0BAAAF,OAAA,IAAAK,eAAA,sBAAAC,qBAAA,4BAAAC,cAAA,qBAAAC,oBAAA,2BAAAC,WAAA,kBAAAC,iBAAA,wBAAAC,WAAA,kBAAAC,iBAAA,wBAAAC,cAAA,qBAAAC,oBAAA,2BAAAb,YAAA,mBAAAc,oBAAA,4BAAAC,kBAAA,0BAAAC,kBAAA,0BAAAC,UAAA,oBAAAC,SAAA,mBAAAC,MAAA,OAAAC,MAAA,OAAAC,SAAA,OAAAC,QAAA,OAAAC,OAAA,KAAAC,mBAAA,0BAAAC,gBAAA,uBAAAC,UAAA,iBAAAC,gBAAA,KAAAC,eAAA,KAAAC,cAAA,KAAAC,WAAA,KAAAC,WAAA,KAAAC,cAAA,KAAAC,YAAA,6CAAAC,YAAA,OAAAC,YAAA,MAAAC,YAAA,qBAAAV,UAAA,mBAAAW,aAAA,oBAAAC,gBAAA,qBAAAtC,YAAA,sBAAAuC,KAAA,KAAAC,YAAA,8BAAAC,MAAA,YAAAA,MAAA,mCAAAC,SAAA,IAAAD,MAAA,MAAAE,IAAA,IAAAC,SAAA,IAAAC,OAAA,KAAAC,SAAA,KAAAC,KAAA,KAAAC,OAAA,KAAAC,aAAA,sBAAAC,KAAA,IAAAC,OAAA,MAAAC,eAAA,YAAAF,KAAA,kBAAAC,OAAA,4CAAAE,OAAA,IAAAC,aAAA,IAAAC,iBAAA,KAAAC,iBAAA,wBAAAC,eAAA,sBAAAC,iBAAA,wBAAAC,oBAAA,KAAAjC,UAAA,YAAA2B,OAAA,wCAAAO,KAAA,IAAAC,KAAA,8BAAAC,MAAA,IAAAC,OAAA,IAAAC,OAAA,2BAAAC,MAAA,IAAAC,QAAA,eAAAC,aAAA,8CAAAzB,SAAA,MAAA0B,OAAA,8FAAAC,SAAA,yFAAAvF,KAAA,IAAAwF,OAAA,IAAA/E,QAAA,MAAA8E,SAAA,8BAAAE,YAAA,mBAAAzE,OAAA,IAAAC,OAAA,IAAAR,QAAA,IAAAW,WAAA,kBAAAC,UAAA,iBAAAqE,UAAA,2CAAAC,QAAA,IAAAC,SAAA,iCAAAzE,UAAA,uDAAA0E,UAAA,MAAAC,MAAA,MAAAC,QAAA,MAAAC,KAAA,MAAAhB,MAAA,MAAAiB,KAAA,MAAApC,IAAA,IAAAqC,UAAA,iBAAAC,WAAA,IAAAC,oBAAA,+CAAA1F,KAAA,IAAA2F,YAAA,IAAAd,SAAA,MAAAT,KAAA,MAAAwB,aAAA,IAAAC,YAAA,IAAA1F,SAAA,MAAA2F,UAAA,IAAAC,SAAA,MAAAC,MAAA,OAAAC,UAAA,IAAAC,QAAA,8BAAA9F,QAAA,IAAAC,YAAA,IAAAgE,KAAA,IAAA8B,MAAA,sBAAA1B,MAAA,IAAA2B,KAAA,4BAAArG,QAAA,0BAAAsG,YAAA,mCAAAF,MAAA,mDAAA9B,KAAA,MAAAiC,OAAA,MAAAH,MAAA,uBAAA/B,KAAA,IAAAC,KAAA,MAAAkC,MAAA,IAAAC,WAAA,YAAApC,KAAA,qCAAArE,QAAA,MAAAsE,KAAA,MAAAC,MAAA,MAAAO,SAAA,MAAA4B,KAAA,MAAAzG,KAAA,IAAAoE,KAAA,IAAA4B,MAAA,IAAAU,KAAA,wBAAArC,KAAA,IAAAkC,MAAA,SAAA7G,EAAA","ignoreList":[]}