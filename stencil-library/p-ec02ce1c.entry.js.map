{"version":3,"names":["VeriteConnector","handleForgotPassword","event","console","log","handleActionClick","handleFormSubmit","stopPropagation","this","type","detail","render","h","key"],"sources":["src/elements/connectors/verite-connector.tsx"],"sourcesContent":["import { Component, Element, Listen, Prop, h } from '@stencil/core'\n\n@Component({\n  tag: 'verite-connector',\n  shadow: false, // Changed to false to allow slot content to maintain its styling\n})\nexport class VeriteConnector {\n  @Element() element!: HTMLElement\n  @Prop() type: 'signup' | 'signin' = 'signup' // Allow different auth types\n\n  // @Listen('ready')\n  // handleReady(event: CustomEvent) {\n  //   // Could initialize any necessary auth state or services\n  //   console.log('Auth component ready', this.type, event)\n  // }\n\n  @Listen('forgotPassword')\n  handleForgotPassword(event: CustomEvent) {\n    console.log('Forgot password clicked', event)\n  }\n\n  @Listen('actionClick')\n  handleActionClick(event: CustomEvent) {\n    console.log('Action clicked', event)\n  }\n\n  @Listen('formSubmit')\n  async handleFormSubmit(event: CustomEvent<{ email: string; password: string }>) {\n    event.stopPropagation()\n    // const vuiComponent = event.target as HTMLElement\n    console.log('type -->', this.type)\n    console.log('vuiComponent on submit -->', event.detail)\n\n    // try {\n    //   // Set loading state on the vui component\n    //   vuiComponent.setAttribute('loading', 'true')\n\n    //   // Make API call based on type\n    //   const endpoint = this.type === 'signup' ? '/api/signup' : '/api/signin'\n    //   const response = await fetch(endpoint, {\n    //     method: 'POST',\n    //     headers: {\n    //       'Content-Type': 'application/json',\n    //     },\n    //     body: JSON.stringify(event.detail),\n    //   })\n\n    //   if (!response.ok) {\n    //     throw new Error(`${this.type} failed`)\n    //   }\n\n    //   const data = await response.json()\n\n    //   // Emit success event\n    //   this.element.dispatchEvent(\n    //     new CustomEvent(`${this.type}Success`, {\n    //       detail: data,\n    //       bubbles: true,\n    //       composed: true,\n    //     })\n    //   )\n    // } catch (err) {\n    //   // Pass error back to vui component\n    //   vuiComponent.dispatchEvent(\n    //     new CustomEvent('error', {\n    //       detail: { message: err.message },\n    //       bubbles: true,\n    //       composed: true,\n    //     })\n    //   )\n    // } finally {\n    //   vuiComponent.setAttribute('loading', 'false')\n    // }\n  }\n\n  render() {\n    return <slot />\n  }\n}\n"],"mappings":"wDAMaA,EAAe,M,mCAEU,Q,CASpC,oBAAAC,CAAqBC,GACnBC,QAAQC,IAAI,0BAA2BF,E,CAIzC,iBAAAG,CAAkBH,GAChBC,QAAQC,IAAI,iBAAkBF,E,CAIhC,sBAAMI,CAAiBJ,GACrBA,EAAMK,kBAENJ,QAAQC,IAAI,cAAYI,KAAKC,MAC7BN,QAAQC,IAAI,gCAA8BF,EAAMQ,O,CA4ClD,MAAAC,GACE,OAAOC,EAAA,QAAAC,IAAA,4C","ignoreList":[]}